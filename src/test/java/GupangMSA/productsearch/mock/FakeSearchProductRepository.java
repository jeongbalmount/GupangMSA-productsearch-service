package GupangMSA.productsearch.mock;

import GupangMSA.productsearch.domain.SearchProduct;
import GupangMSA.productsearch.service.port.SearchProductRepository;

import java.util.*;

public class FakeSearchProductRepository implements SearchProductRepository {

    private final String autoGeneratedId = UUID.randomUUID().toString();
    private final List<SearchProduct> data = Collections.synchronizedList(new ArrayList<>());


    @Override
    public SearchProduct save(SearchProduct request) {
        if (request.getId() == null) {
            SearchProduct searchProduct = SearchProduct.builder()
                    .id(autoGeneratedId)
                    .productId(request.getProductId())
                    .name(request.getName())
                    .price(request.getPrice())
                    .category(request.getCategory())
                    .build();
            data.add(searchProduct);
            return searchProduct;
        } else {
            data.removeIf(item -> Objects.equals(item.getId(), request.getId()));
            data.add(request);
            return request;
        }
    }

    @Override
    public List<SearchProduct> findBySearchWord(String searchWord) {
        List<SearchProduct> searchProducts = new ArrayList<>();
        for (SearchProduct searchProduct : data) {
            if (Objects.equals(searchProduct.getName(), searchWord)) {
                searchProducts.add(searchProduct);
            }
        }
        return searchProducts;
    }
}
